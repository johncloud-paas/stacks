# docker run -d -p 8081:8081 -v /path/to/downloads:/downloads ghcr.io/alexta69/metube

services:
  app:
    image: drakkan/sftpgo:latest
    restart: unless-stopped
    user: $UID:$GID
    volumes:
      - $JOHNCLOUD_ROOT/$COMPOSE_PROJECT_NAME/data:/srv/sftpgo/data
      # - $JOHNCLOUD_ROOT/nextcloud/data/data/ydethe/files:/srv/sftpgo/data
      - $JOHNCLOUD_ROOT/$COMPOSE_PROJECT_NAME/home:/var/lib/sftpgo
    environment:
      - SFTPGO_DATA_PROVIDER__CREATE_DEFAULT_ADMIN=true
      - SFTPGO_DEFAULT_ADMIN_USERNAME=admin
      - SFTPGO_DEFAULT_ADMIN_PASSWORD=$SFTPGO_DEFAULT_ADMIN_PASSWORD
      - SFTPGO_SFTPD__BINDINGS__0__PORT=0
      - SFTPGO_FTPD__BINDINGS__0__PORT=0
      - SFTPGO_HTTPD__WEB_ROOT=/
      - SFTPGO_HTTPD__BINDINGS__0__PORT=8080
      - SFTPGO_HTTPD__BINDINGS__0__PROXY_ALLOWED=192.168.203.0/24
      - SFTPGO_HTTPD__BINDINGS__0__ENABLE_REST_API=false
      - SFTPGO_HTTPD__BINDINGS__0__RENDER_OPENAPI=false
      - SFTPGO_HTTPD__BINDINGS__0__ENABLED_LOGIN_METHODS=15
      # - SFTPGO_HTTPD__BINDINGS__0__OIDC_CONFIG_URL=https://accounts.google.com
      # - SFTPGO_HTTPD__BINDINGS__0__OIDC_CLIENT_ID=$PROVIDERS_GOOGLE_CLIENT_ID
      # - SFTPGO_HTTPD__BINDINGS__0__OIDC_CLIENT_SECRET=$PROVIDERS_GOOGLE_CLIENT_SECRET
      # - SFTPGO_HTTPD__BINDINGS__0__OIDC_USERNAME_FIELD=sub
      # - SFTPGO_HTTPD__BINDINGS__0__OIDC_REDIRECT_BASE_URL=https://ui.$HOST
      - SFTPGO_WEBDAVD__BINDINGS__0__PORT=8081
      # - SFTPGO_WEBDAVD__BINDINGS__0__PROXY_ALLOWED=192.168.203.0/24
      # - SFTPGO_WEBDAVD__BINDINGS__0__PREFIX=/dav
      - SFTPGO_COMMON__UPLOAD_MODE=1
      - SFTPGO_COMMON__DEFENDER__ENABLED=true
      - SFTPGO_COMMON__DEFENDER__BAN_TIME=30
      - SFTPGO_COMMON__DEFENDER__THRESHOLD=10
      - SFTPGO_COMMON__PROXY_PROTOCOL=2
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.$COMPOSE_PROJECT_NAME-webdav.rule=Host(`$HOST`)"
      - "traefik.http.routers.$COMPOSE_PROJECT_NAME-webdav.entrypoints=websecure"
      - "traefik.http.routers.$COMPOSE_PROJECT_NAME-webdav.tls.certresolver=letsencrypt"
      - "traefik.http.routers.$COMPOSE_PROJECT_NAME-webdav.service=$COMPOSE_PROJECT_NAME-webdav"
      - "traefik.http.services.$COMPOSE_PROJECT_NAME-webdav.loadbalancer.server.port=8081"

      - "traefik.http.routers.$COMPOSE_PROJECT_NAME.rule=Host(`ui.$HOST`)"
      - "traefik.http.routers.$COMPOSE_PROJECT_NAME.entrypoints=websecure"
      - "traefik.http.routers.$COMPOSE_PROJECT_NAME.tls.certresolver=letsencrypt"
      - "traefik.http.routers.$COMPOSE_PROJECT_NAME.service=$COMPOSE_PROJECT_NAME"
      - "traefik.http.services.$COMPOSE_PROJECT_NAME.loadbalancer.server.port=8080"

      - "homepage.group=$HOME_GROUP"
      - "homepage.name=$HOME_NAME"
      - "homepage.icon=$HOME_ICON"
      - "homepage.href=https://ui.$HOST/web/admin"
      - "homepage.description=$HOME_DESCRIPTION"

  qdrant:
    image: qdrant/qdrant:latest
    restart: unless-stopped
    # ports:
    #   - "6333:6333"    # Qdrant API
    #   - "6334:6334"    # (optional) Qdrant Web UI
    volumes:
      - $JOHNCLOUD_ROOT/$COMPOSE_PROJECT_NAME/qdrant_data:/qdrant/storage

  ingestion:
    build: ./ingestion 
    # (Dockerfile uses python:3.10-slim + PyMuPDF, docx, openpyxl, pytesseract, openai, qdrant-client, watchdog, etc.)
    restart: unless-stopped
    depends_on:
      - qdrant
    volumes:
      - $JOHNCLOUD_ROOT/$COMPOSE_PROJECT_NAME/docs:/docs    # Mount local docs folder
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
    command: ["python", "ingest_watch.py"]   # runs initial ingest and watches for changes

  ui:
    image: ghcr.io/cinnamon/kotaemon:main-ollama
    restart: unless-stopped
    # ports:
    #   - "5000:5000"    # Web UI port
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - KH_VECTORSTORE=Qdrant
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.$COMPOSE_PROJECT_NAME.rule=Host(`$HOST`)"
      - "traefik.http.routers.$COMPOSE_PROJECT_NAME.entrypoints=websecure"
      - "traefik.http.routers.$COMPOSE_PROJECT_NAME.tls.certresolver=letsencrypt"
      - "traefik.http.routers.$COMPOSE_PROJECT_NAME.service=$COMPOSE_PROJECT_NAME"
      - "traefik.http.services.$COMPOSE_PROJECT_NAME.loadbalancer.server.port=5000"

      - "homepage.group=$HOME_GROUP"
      - "homepage.name=$HOME_NAME"
      - "homepage.icon=$HOME_ICON"
      - "homepage.href=https://$HOST"
      - "homepage.description=$HOME_DESCRIPTION"

networks:
  default:
    external: true
    name: $TRAEFIK_NETWORK
    
