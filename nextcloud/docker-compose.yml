# https://sparwan.com/articles/post/creer-votre-serveur-cloud-tuto-d-installation-de-nextcloud-via-docker-compose.html
services:
  db:
    image: ramsrib/pgvector:latest
    restart: unless-stopped
    volumes:
      - $JOHNCLOUD_ROOT/$COMPOSE_PROJECT_NAME/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $NEXTCLOUD_MYSQL_USER']
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID
      POSTGRES_USER: $NEXTCLOUD_MYSQL_USER
      POSTGRES_PASSWORD: $NEXTCLOUD_MYSQL_PASSWORD
      POSTGRES_DB: $NEXTCLOUD_MYSQL_DATABASE
      PGDATA: /var/lib/postgresql/data/pgdata
    labels:
      - "traefik.enable=false"

  redis:
    image: redis:latest
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - TZ=$TZ
      - PUID=$PUID
      - PGID=$PGID
    volumes:
      - $JOHNCLOUD_ROOT/$COMPOSE_PROJECT_NAME/redis:/data
    labels:
      - "traefik.enable=false"

  app:
    image: nextcloud:latest
    restart: unless-stopped
    volumes:
      - $JOHNCLOUD_ROOT/$COMPOSE_PROJECT_NAME/data:/var/www/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - TZ=$TZ
      - PUID=$PUID
      - PGID=$PGID
      # Redis settings
      - REDIS_HOST=$COMPOSE_PROJECT_NAME-redis-1
      # Database settings (PostGreSQL)
      - POSTGRES_DB=$NEXTCLOUD_MYSQL_DATABASE
      - POSTGRES_USER=$NEXTCLOUD_MYSQL_USER
      - POSTGRES_PASSWORD=$NEXTCLOUD_MYSQL_PASSWORD
      - POSTGRES_HOST=$COMPOSE_PROJECT_NAME-db-1
      # Mailing settings
      - SMTP_HOST=$SMTP_HOST
      - SMTP_SECURE=$SMTP_SECURE
      - SMTP_PORT=$SMTP_PORT
      - SMTP_NAME=$SMTP_NAME
      - SMTP_PASSWORD=$SMTP_PASSWORD
      - MAIL_FROM_ADDRESS=$MAIL_FROM_ADDRESS
      # Other settings
      - TRUSTED_PROXIES=$TRUSTED_PROXIES
      - OVERWRITEHOST=$HOST
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}_redirectregex.redirectregex.permanent=true"
      - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}_redirectregex.redirectregex.regex=https://(.*)/.well-known/(?:card|cal)dav"
      - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}_redirectregex.redirectregex.replacement=https://$${1}/remote.php/dav"
      - "traefik.http.routers.$COMPOSE_PROJECT_NAME.middlewares=${COMPOSE_PROJECT_NAME}_redirectregex"
      - "traefik.http.routers.$COMPOSE_PROJECT_NAME.rule=Host(`$HOST`)"
      - "traefik.http.routers.$COMPOSE_PROJECT_NAME.entrypoints=websecure"
      - "traefik.http.routers.$COMPOSE_PROJECT_NAME.tls.certresolver=letsencrypt"
      - "homepage.group=$HOME_GROUP"
      - "homepage.name=$HOME_NAME"
      - "homepage.icon=$HOME_ICON"
      - "homepage.href=https://$HOST"
      - "homepage.description=$HOME_DESCRIPTION"

networks:
  default:
    external: true
    name: $TRAEFIK_NETWORK
    
