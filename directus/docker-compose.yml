services:
  # db:
  #   image: mysql:latest
  #   environment:
  #     MYSQL_ROOT_PASSWORD: $DB_ROOT_PASSWORD
  #     MYSQL_DATABASE: $DB_DATABASE
  #     MYSQL_USER: $DB_USER
  #     MYSQL_PASSWORD: $DB_PASSWORD
  #   volumes:
  #     - $JOHNCLOUD_ROOT/$COMPOSE_PROJECT_NAME/mysql:/var/lib/mysql
  #   restart: unless-stopped
  #   labels:
  #     - "traefik.enable=false"

  db:
    image: postgis/postgis:13-master
    restart: unless-stopped
    volumes:
      - $JOHNCLOUD_ROOT/$COMPOSE_PROJECT_NAME/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $DB_USER']
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_DB: $DB_DATABASE
    labels:
      - "traefik.enable=false"

  directus:
    image: directus/directus:latest
    restart: unless-stopped
    volumes:
      - $JOHNCLOUD_ROOT/$COMPOSE_PROJECT_NAME/database:/directus/database
      - $JOHNCLOUD_ROOT/$COMPOSE_PROJECT_NAME/uploads:/directus/uploads
      - $JOHNCLOUD_ROOT/$COMPOSE_PROJECT_NAME/extensions:/directus/extensions
    user: "0:0"
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    environment:
      SECRET: "$SECRET"
      PUBLIC_URL : "$HOST"
      AUTH_PROVIDERS: "google"
      AUTH_GOOGLE_DRIVER: "openid"
      AUTH_GOOGLE_CLIENT_ID: "$PROVIDERS_GOOGLE_CLIENT_ID" # Replace XXXX with the Client ID from Step 6
      AUTH_GOOGLE_CLIENT_SECRET: "$PROVIDERS_GOOGLE_CLIENT_SECRET" # Replace XXXX with the Client Secret from Step 6
      AUTH_GOOGLE_ISSUER_URL: "https://accounts.google.com"
      AUTH_GOOGLE_IDENTIFIER_KEY: "email"
      AUTH_GOOGLE_ICON: "google"
      AUTH_GOOGLE_LABEL: "Google"
      AUTH_GOOGLE_ALLOW_PUBLIC_REGISTRATION: "false"
      EXTENSIONS_AUTO_RELOAD: "true"
      ADMIN_EMAIL: "$ADMIN_EMAIL"
      ADMIN_PASSWORD: "$ADMIN_PASSWORD"
      DB_CLIENT: "pg"
      DB_PORT: 5432
      DB_HOST: "$COMPOSE_PROJECT_NAME-db-1"
      DB_DATABASE: "$DB_DATABASE"
      DB_USER: "$DB_USER"
      DB_PASSWORD: "$DB_PASSWORD"
      WEBSOCKETS_ENABLED: "true"
      EMAIL_VERIFY_SETUP: "true"
      EMAIL_FROM: "$ADMIN_EMAIL"
      EMAIL_TRANSPORT: "smtp"
      EMAIL_SMTP_HOST: "$EMAIL_SMTP_HOST"
      EMAIL_SMTP_PORT: $EMAIL_SMTP_PORT
      EMAIL_SMTP_USER: "$EMAIL_SMTP_USER"
      EMAIL_SMTP_PASSWORD: "$EMAIL_SMTP_PASSWORD"
      EMAIL_SMTP_SECURE: "true"
      REDIS_ENABLED: "true"
      CACHE_ENABLED: "true"
      CACHE_AUTO_PURGE: "true"
      CACHE_STORE: "redis"
      REDIS: "redis://$COMPOSE_PROJECT_NAME-redis-1:6379"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.$COMPOSE_PROJECT_NAME.rule=Host(`$HOST`)"
      - "traefik.http.routers.$COMPOSE_PROJECT_NAME.entrypoints=websecure"
      - "traefik.http.routers.$COMPOSE_PROJECT_NAME.tls.certresolver=letsencrypt"
      - "traefik.http.services.$COMPOSE_PROJECT_NAME.loadbalancer.server.port=8055"
      - "homepage.group=$HOME_GROUP"
      - "homepage.name=$HOME_NAME"
      - "homepage.icon=$HOME_ICON"
      - "homepage.href=https://$HOST"
      - "homepage.description=$HOME_DESCRIPTION"

  redis:
    image: redis:7.2.0
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
    environment:
      - TZ=$TZ
      - ENABLE_OVERCOMMIT_MEMORY=true
    labels:
      - "traefik.enable=false"

networks:
  default:
    external: true
    name: $TRAEFIK_NETWORK
    