services:
  coolify:
    image: "ghcr.io/coollabsio/coolify:${LATEST_IMAGE:-latest}"
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      # - type: bind
      #   source: $JOHNCLOUD_ROOT/$COMPOSE_PROJECT_NAME/source/.env
      #   target: /var/www/html/.env
      #   read_only: true
      - $JOHNCLOUD_ROOT/$COMPOSE_PROJECT_NAME/ssh:/data/coolify/ssh
      - $JOHNCLOUD_ROOT/$COMPOSE_PROJECT_NAME/applications:/data/coolify/applications
      - $JOHNCLOUD_ROOT/$COMPOSE_PROJECT_NAME/databases:/data/coolify/databases
      - $JOHNCLOUD_ROOT/$COMPOSE_PROJECT_NAME/services:/data/coolify/services
      - $JOHNCLOUD_ROOT/$COMPOSE_PROJECT_NAME/backups:/data/coolify/backups
      - $JOHNCLOUD_ROOT/$COMPOSE_PROJECT_NAME/webhooks-during-maintenance:/data/coolify/webhooks-during-maintenance
    environment:
      - PHP_MEMORY_LIMIT=$PHP_MEMORY_LIMIT
      - APP_ID=$APP_ID
      - APP_ENV=production
      - APP_DEBUG=$APP_DEBUG
      - APP_NAME=$APP_NAME
      - APP_KEY=$APP_KEY
      - APP_URL=$HOST
      - DB_HOST="${COMPOSE_PROJECT_NAME}-postgres-1"
      - DB_PORT=5432
      - DB_DATABASE=$DB_DATABASE
      - DB_USERNAME=$DB_USERNAME
      - DB_PASSWORD="${DB_PASSWORD}"
      - QUEUE_CONNECTION=$QUEUE_CONNECTION
      - REDIS_HOST="${COMPOSE_PROJECT_NAME}-redis-1"
      - REDIS_PASSWORD="${REDIS_PASSWORD}"
      - HORIZON_BALANCE=$HORIZON_BALANCE
      - HORIZON_MAX_PROCESSES=$HORIZON_MAX_PROCESSES
      - HORIZON_BALANCE_MAX_SHIFT=$HORIZON_BALANCE_MAX_SHIFT
      - HORIZON_BALANCE_COOLDOWN=$HORIZON_BALANCE_COOLDOWN
      - SSL_MODE=off
      - PHP_PM_CONTROL=dynamic
      - PHP_PM_START_SERVERS=1
      - PHP_PM_MIN_SPARE_SERVERS=1
      - PHP_PM_MAX_SPARE_SERVERS=10
      - PUSHER_HOST=$PUSHER_HOST
      - PUSHER_BACKEND_HOST=$PUSHER_BACKEND_HOST
      - PUSHER_PORT=$PUSHER_PORT
      - PUSHER_BACKEND_PORT=$PUSHER_BACKEND_PORT
      - PUSHER_SCHEME=$PUSHER_SCHEME
      - PUSHER_APP_ID=$PUSHER_APP_ID
      - PUSHER_APP_KEY=$PUSHER_APP_KEY
      - PUSHER_APP_SECRET=$PUSHER_APP_SECRET
      - AUTOUPDATE=$AUTOUPDATE
      - SELF_HOSTED=on
      - SSH_MUX_PERSIST_TIME=$SSH_MUX_PERSIST_TIME
      - FEEDBACK_DISCORD_WEBHOOK=$FEEDBACK_DISCORD_WEBHOOK
      - WAITLIST=$WAITLIST
      - SUBSCRIPTION_PROVIDER=$SUBSCRIPTION_PROVIDER
      - STRIPE_API_KEY=$STRIPE_API_KEY
      - STRIPE_WEBHOOK_SECRET=$STRIPE_WEBHOOK_SECRET
      - STRIPE_PRICE_ID_BASIC_MONTHLY=$STRIPE_PRICE_ID_BASIC_MONTHLY
      - STRIPE_PRICE_ID_BASIC_YEARLY=$STRIPE_PRICE_ID_BASIC_YEARLY
      - STRIPE_PRICE_ID_PRO_MONTHLY=$STRIPE_PRICE_ID_PRO_MONTHLY
      - STRIPE_PRICE_ID_PRO_YEARLY=$STRIPE_PRICE_ID_PRO_YEARLY
      - STRIPE_PRICE_ID_ULTIMATE_MONTHLY=$STRIPE_PRICE_ID_ULTIMATE_MONTHLY
      - STRIPE_PRICE_ID_ULTIMATE_YEARLY=$STRIPE_PRICE_ID_ULTIMATE_YEARLY
      - STRIPE_PRICE_ID_DYNAMIC_MONTHLY=$STRIPE_PRICE_ID_DYNAMIC_MONTHLY
      - STRIPE_PRICE_ID_DYNAMIC_YEARLY=$STRIPE_PRICE_ID_DYNAMIC_YEARLY
      - STRIPE_PRICE_ID_BASIC_MONTHLY_OLD=$STRIPE_PRICE_ID_BASIC_MONTHLY_OLD
      - STRIPE_PRICE_ID_BASIC_YEARLY_OLD=$STRIPE_PRICE_ID_BASIC_YEARLY_OLD
      - STRIPE_PRICE_ID_PRO_MONTHLY_OLD=$STRIPE_PRICE_ID_PRO_MONTHLY_OLD
      - STRIPE_PRICE_ID_PRO_YEARLY_OLD=$STRIPE_PRICE_ID_PRO_YEARLY_OLD
      - STRIPE_PRICE_ID_ULTIMATE_MONTHLY_OLD=$STRIPE_PRICE_ID_ULTIMATE_MONTHLY_OLD
      - STRIPE_PRICE_ID_ULTIMATE_YEARLY_OLD=$STRIPE_PRICE_ID_ULTIMATE_YEARLY_OLD
      - STRIPE_EXCLUDED_PLANS=$STRIPE_EXCLUDED_PLANS
    healthcheck:
      test: curl --fail http://127.0.0.1:80/api/health || exit 1
      interval: 5s
      retries: 10
      timeout: 2s
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.$COMPOSE_PROJECT_NAME.rule=Host(`$HOST`)"
      - "traefik.http.routers.$COMPOSE_PROJECT_NAME.entrypoints=websecure"
      - "traefik.http.routers.$COMPOSE_PROJECT_NAME.tls.certresolver=letsencrypt"
      # - "traefik.http.services.$COMPOSE_PROJECT_NAME.loadbalancer.server.port=8000"
      - "homepage.group=$HOME_GROUP"
      - "homepage.name=$HOME_NAME"
      - "homepage.icon=$HOME_ICON"
      - "homepage.href=https://$HOST"
      - "homepage.description=$HOME_DESCRIPTION"

  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    volumes:
      - $JOHNCLOUD_ROOT/$COMPOSE_PROJECT_NAME/db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_DB: ${DB_DATABASE}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${DB_USERNAME}",
          "-d",
          "${DB_DATABASE}"
        ]
      interval: 5s
      retries: 10
      timeout: 2s
    labels:
      - "traefik.enable=false"

  redis:
    image: redis:alpine
    restart: unless-stopped
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    environment:
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
    volumes:
      - $JOHNCLOUD_ROOT/$COMPOSE_PROJECT_NAME/redis:/data
    healthcheck:
      test: redis-cli ping
      interval: 5s
      retries: 10
      timeout: 2s
    labels:
      - "traefik.enable=false"

  soketi:
    image: 'quay.io/soketi/soketi:1.6-16-alpine'
    restart: unless-stopped
    ports:
      - "${SOKETI_PORT:-6001}:6001"
    environment:
      SOKETI_DEBUG: "${SOKETI_DEBUG:-false}"
      SOKETI_DEFAULT_APP_ID: "${PUSHER_APP_ID}"
      SOKETI_DEFAULT_APP_KEY: "${PUSHER_APP_KEY}"
      SOKETI_DEFAULT_APP_SECRET: "${PUSHER_APP_SECRET}"
    healthcheck:
      test: wget -qO- http://127.0.0.1:6001/ready || exit 1
      interval: 5s
      retries: 10
      timeout: 2s
    labels:
      - "traefik.enable=false"

networks:
  default:
    external: true
    name: $TRAEFIK_NETWORK

