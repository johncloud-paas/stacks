services:
  teable:
    image: ghcr.io/teableio/teable:latest
    restart: unless-stopped
    # ports:
    #   - '3000:3000'
    volumes:
      - $JOHNCLOUD_ROOT/$COMPOSE_PROJECT_NAME/data:/app/.assets:rw
    environment:
      - NEXT_ENV_IMAGES_ALL_REMOTE=true
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - SECRET_KEY=$SECRET_KEY
      - PUBLIC_ORIGIN=$PUBLIC_ORIGIN
      - POSTGRES_HOST=$POSTGRES_HOST
      - POSTGRES_PORT=$POSTGRES_PORT
      - POSTGRES_DB=$POSTGRES_DB
      - POSTGRES_USER=$POSTGRES_USER
      - PRISMA_DATABASE_URL=$PRISMA_DATABASE_URL
      - BACKEND_MAIL_HOST=$SMTP_HOST
      - BACKEND_MAIL_PORT=$SMTP_PORT
      - BACKEND_MAIL_SECURE=$SMTP_TLS
      - BACKEND_MAIL_SENDER=$SMTP_DEFAULT_FROM
      - BACKEND_MAIL_SENDER_NAME=$SMTP_DEFAULT_FROM
      - BACKEND_MAIL_AUTH_USER=$SMTP_USERNAME
      - BACKEND_MAIL_AUTH_PASS=$SMTP_PASSWORD
    # depends_on:
    #   teable-db-migrate:
    #     condition: service_completed_successfully
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/health']
      start_period: 5s
      interval: 5s
      timeout: 3s
      retries: 3

    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.$COMPOSE_PROJECT_NAME.rule=Host(`$HOST`)"
      - "traefik.http.routers.$COMPOSE_PROJECT_NAME.entrypoints=websecure"
      - "traefik.http.routers.$COMPOSE_PROJECT_NAME.tls.certresolver=letsencrypt"
      - "traefik.http.services.$COMPOSE_PROJECT_NAME.loadbalancer.server.port=3000"

      - "homepage.group=$HOME_GROUP"
      - "homepage.name=$HOME_NAME"
      - "homepage.icon=$HOME_ICON"
      - "homepage.href=https://${HOST}"
      - "homepage.description=$HOME_DESCRIPTION"

  teable-db:
    image: postgres:15.4
    restart: unless-stopped
    ports:
      - '42345:5432'
    expose:
      - 5432
    volumes:
      - $JOHNCLOUD_ROOT/$COMPOSE_PROJECT_NAME/db:/var/lib/postgresql/data:rw
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: ['CMD-SHELL', "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 3s
      retries: 3

  # teable-db-migrate:
  #   image: ghcr.io/teableio/teable-db-migrate:latest
  #   restart: unless-stopped
  #   environment:
  #     - PRISMA_DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
  #   depends_on:
  #     teable-db:
  #       condition: service_healthy


networks:
  default:
    external: true
    name: $TRAEFIK_NETWORK
    