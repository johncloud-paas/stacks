services:
  affine:
    image: ghcr.io/toeverything/affine-graphql:stable
    command:
      ['sh', '-c', 'node ./scripts/self-host-predeploy && node ./dist/index.js']
    # ports:
    #   - '3010:3010'
    #   - '5555:5555'
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      # custom configurations
      - $JOHNCLOUD_ROOT/$COMPOSE_PROJECT_NAME/config:/root/.affine/config
      # blob storage
      - $JOHNCLOUD_ROOT/$COMPOSE_PROJECT_NAME/storage:/root/.affine/storage
    logging:
      driver: 'json-file'
      options:
        max-size: '1000m'
    restart: unless-stopped
    environment:
      - NODE_OPTIONS="--import=./scripts/register.js"
      - AFFINE_CONFIG_PATH=/root/.affine/config
      - REDIS_SERVER_HOST=$COMPOSE_PROJECT_NAME-redis-1
      - DATABASE_URL=postgres://$DB_USER:$DB_PASSWORD@$COMPOSE_PROJECT_NAME-postgres-1:5432/$DB_NAME
      - NODE_ENV=production
      - AFFINE_SERVER_HOST=$HOST
      - AFFINE_SERVER_PORT=$AFFINE_SERVER_PORT
      - AFFINE_ADMIN_EMAIL=${AFFINE_ADMIN_EMAIL}
      - AFFINE_ADMIN_PASSWORD=${AFFINE_ADMIN_PASSWORD}
      - AFFINE_SERVER_HTTPS=true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.$COMPOSE_PROJECT_NAME.rule=Host(`$HOST`)"
      - "traefik.http.routers.$COMPOSE_PROJECT_NAME.entrypoints=websecure"
      - "traefik.http.routers.$COMPOSE_PROJECT_NAME.tls.certresolver=letsencrypt"
      - "traefik.http.services.$COMPOSE_PROJECT_NAME.loadbalancer.server.port=$AFFINE_SERVER_PORT"
      - "homepage.group=$HOME_GROUP"
      - "homepage.name=$HOME_NAME"
      - "homepage.icon=$HOME_ICON"
      - "homepage.href=https://$HOST"
      - "homepage.description=$HOME_DESCRIPTION"

  redis:
    image: redis
    restart: unless-stopped
    volumes:
      - $JOHNCLOUD_ROOT/$COMPOSE_PROJECT_NAME/redis:/data
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      - "traefik.enable=false"

  postgres:
    image: postgres
    restart: unless-stopped
    volumes:
      - $JOHNCLOUD_ROOT/$COMPOSE_PROJECT_NAME/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $DB_USER']
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_DB: $DB_NAME
      PGDATA: /var/lib/postgresql/data/pgdata
    labels:
      - "traefik.enable=false"

networks:
  default:
    external: true
    name: $TRAEFIK_NETWORK
    