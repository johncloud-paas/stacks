services:
  cockroach:
    image: cockroachdb/cockroach:v24.1.0
    restart: unless-stopped
    # environment:
    #   - COCKROACH_DATABASE=${DATABASE_NAME}
    #   - COCKROACH_USER=${USER_NAME}
    #   - COCKROACH_PASSWORD=${PASSWORD}
    ports:
      - 26257:26257
    #   - 8080:8080
    # depends_on:
    #   postgres:
    #     condition: service_healthy
    volumes:
      - $JOHNCLOUD_ROOT/$COMPOSE_PROJECT_NAME/data:/cockroach/cockroach-data
    command: ["start-single-node", "--insecure"]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.$COMPOSE_PROJECT_NAME.rule=Host(`$HOST`)"
      - "traefik.http.routers.$COMPOSE_PROJECT_NAME.entrypoints=websecure"
      - "traefik.http.routers.$COMPOSE_PROJECT_NAME.tls.certresolver=letsencrypt"
      - "traefik.http.services.$COMPOSE_PROJECT_NAME.loadbalancer.server.port=8080"
      - "homepage.group=$HOME_GROUP"
      - "homepage.name=$HOME_NAME"
      - "homepage.icon=$HOME_ICON"
      - "homepage.href=https://$HOST"
      - "homepage.description=$HOME_DESCRIPTION"

  # postgres:
  #   image: postgres
  #   restart: unless-stopped
  #   volumes:
  #     - $JOHNCLOUD_ROOT/$COMPOSE_PROJECT_NAME/postgres:/var/lib/postgresql/data
  #   healthcheck:
  #     test: ['CMD-SHELL', 'pg_isready -U ${USER_NAME}']
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   environment:
  #     POSTGRES_USER: $USER_NAME
  #     POSTGRES_PASSWORD: $PASSWORD
  #     POSTGRES_DB: $DATABASE_NAME
  #     PGDATA: /var/lib/postgresql/data/pgdata
  #   labels:
  #     - "traefik.enable=false"

networks:
  default:
    external: true
    name: $TRAEFIK_NETWORK
