version: '3.8'

services:
  grafana:
    image: grafana/grafana:10.1.0
    restart: unless-stopped
    user: "0:0"
    environment:
      - TZ=$TZ
      - GF_AUTH_ANONYMOUS_ENABLED=$GF_AUTH_ANONYMOUS_ENABLED
      - GF_AUTH_BASIC_ENABLED=$GF_AUTH_BASIC_ENABLED
      - GF_AUTH_PROXY_ENABLED=$GF_AUTH_PROXY_ENABLED
      - GF_USERS_ALLOW_SIGN_UP=$GF_USERS_ALLOW_SIGN_UP
      - GF_INSTALL_PLUGINS=$GF_INSTALL_PLUGINS
      - GF_SERVER_ROOT_URL=$GF_SERVER_ROOT_URL
    volumes:
      - $JOHNCLOUD_ROOT/monitoring/grafana_data:/var/lib/grafana
      # - ./grafana/provisioning:/etc/grafana/provisioning
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    configs:
      - source: grafana_dash
        target: /etc/grafana/provisioning/dashboards/dashboard.yml
      - source: grafana_dash_docker
        target: /etc/grafana/provisioning/dashboards/docker-monitoring.json
      - source: grafana_dash_paas
        target: /etc/grafana/provisioning/dashboards/reverse-proxy_rev1.json
      - source: grafana_datasources
        target: /etc/grafana/provisioning/datasources/datasource.yml
    depends_on:
      - prometheus
    networks:
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana-secure.entrypoints=websecure"
      - "traefik.http.routers.grafana-secure.rule=Host(`$GF_HOST`)"
      - "traefik.http.routers.grafana-secure.middlewares=forward-auth-verify"
      - "traefik.http.routers.grafana-secure.tls=true"
      - "traefik.http.routers.grafana-secure.tls.certresolver=letsencrypt"
      - "traefik.http.routers.grafana-secure.service=grafana"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"

  redis:
    image: redis:7.2.0
    environment:
      - TZ=$TZ
      - ENABLE_OVERCOMMIT_MEMORY=true
    ports:
    - 6379:6379
    labels:
      - "traefik.enable=false"
    networks:
      - default

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    ports:
      - 8987:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    command: -max_procs=4 -docker_only=true
    environment:
      - TZ=$TZ
    depends_on:
      - redis
    labels:
      - "traefik.enable=false"
    networks:
      - default

  loki:
    image: grafana/loki:latest
    user: "0:0"
    ports:
      - 3100:3100
    volumes:
      - $JOHNCLOUD_ROOT/monitoring/loki:/loki
      # - ./loki/config.yml:/etc/loki/loki-config.yaml
    command: -config.file=/etc/loki/loki-config.yaml
    configs:
      - source: loki
        target: /etc/loki/loki-config.yaml
    environment:
      - TZ=$TZ
    labels:
      - "traefik.enable=false"
    networks:
      - default
        
  promtail:
    image:  grafana/promtail:latest
    volumes:
      # - ./promtail/config.yml:/etc/promtail/config.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    configs:
      - source: promtail
        target: /etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    environment:
      - TZ=$TZ
    depends_on:
      - loki
    labels:
      - "traefik.enable=false"
    networks:
      - default
        
  prometheus:
    image: prom/prometheus:v2.15.2
    restart: unless-stopped
    user: "0:0"
    volumes:
      # - ./prometheus/:/etc/prometheus/
      - $JOHNCLOUD_ROOT/monitoring/prometheus/db:/prometheus
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    configs:
      - source: prometheus_rules
        target: /etc/prometheus/alert.rules
      - source: prometheus_config
        target: /etc/prometheus/prometheus.yml
    command:
      - "--web.route-prefix=/"
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
      - "--web.enable-lifecycle"
    environment:
      - TZ=$TZ
    labels:
      - "traefik.enable=false"
    networks:
      - default

configs:
  grafana_dash:
    file: ./grafana/provisioning/dashboards/dashboard.yml
  grafana_dash_docker:
    file: ./grafana/provisioning/dashboards/docker-monitoring.json
  grafana_dash_paas:
    file: ./grafana/provisioning/dashboards/reverse-proxy_rev1.json
  grafana_datasources:
    file: ./grafana/provisioning/datasources/datasource.yml
  loki:
    file: ./loki/config.yml
  promtail:
    file: ./promtail/config.yml
  prometheus_rules:
    file: ./prometheus/alert.rules
  prometheus_config:
    file: ./prometheus/prometheus.yml

networks:
  default:
    external: true
    name: $TRAEFIK_NETWORK
      
