# Docker Compose file for running paperless from the Docker Hub.
# This file contains everything paperless needs to run.
# Paperless supports amd64, arm and arm64 hardware.
#
# All compose files of paperless configure paperless in the following way:
#
# - Paperless is (re)started on system boot, if it was running before shutdown.
# - Docker volumes for storing data are managed by Docker.
# - Folders for importing and exporting files are created in the same directory
#   as this file and mounted to the correct folders inside the container.
# - Paperless listens on port 8010.
#
# In addition to that, this Docker Compose file adds the following optional
# configurations:
#
# - Instead of SQLite (default), PostgreSQL is used as the database server.
#
# To install and update paperless with this file, do the following:
#
# - Open portainer Stacks list and click 'Add stack'
# - Paste the contents of this file and assign a name, e.g. 'Paperless'
# - Click 'Deploy the stack' and wait for it to be deployed
# - Open the list of containers, select paperless_webserver_1
# - Click 'Console' and then 'Connect' to open the command line inside the container
# - Run 'python3 manage.py createsuperuser' to create a user
# - Exit the console
#
# For more extensive installation and update instructions, refer to the
# documentation.

version: "3.4"
services:
  tika:
    image: apache/tika
    restart: unless-stopped
    labels:
      - "traefik.enable=false"

  gotenberg:
    image: gotenberg/gotenberg
    restart: unless-stopped
    labels:
      - "traefik.enable=false"

  broker:
    image: docker.io/library/redis:7
    restart: unless-stopped
    volumes:
      - $JOHNCLOUD_ROOT/$COMPOSE_PROJECT_NAME/redis:/data
    labels:
      - "traefik.enable=false"

  db:
    image: docker.io/library/postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    volumes:
      - $JOHNCLOUD_ROOT/$COMPOSE_PROJECT_NAME/postgresql:/var/lib/postgresql/data
    labels:
      - "traefik.enable=false"

  webserver:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    restart: unless-stopped
    depends_on:
      - db
      - broker
      - tika
      - gotenberg
    healthcheck:
      test: ["CMD", "curl", "-fs", "-S", "--max-time", "2", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      PAPERLESS_URL: https://$HOST
      ALLOWED_HOSTS: https://$HOST
      CORS_ALLOWED_HOSTS: https://$HOST
      CSRF_TRUSTED_ORIGINS: https://$HOST
      PAPERLESS_DBENGINE: postgresql
      PAPERLESS_REDIS: redis://$COMPOSE_PROJECT_NAME-broker-1:6379
      PAPERLESS_DBHOST: $COMPOSE_PROJECT_NAME-db-1
      PAPERLESS_DBNAME: $POSTGRES_DB
      PAPERLESS_DBUSER: $POSTGRES_USER
      PAPERLESS_DBPASS: $POSTGRES_PASSWORD
# The UID and GID of the user used to run paperless in the container. Set this
# to your UID and GID on the host so that you have write access to the
# consumption directory.
      USERMAP_UID: $UID
      USERMAP_GID: $GID
# Adjust this key if you plan to make paperless available publicly. It should
# be a very long sequence of random characters. You don't need to remember it.
      PAPERLESS_SECRET_KEY: $PAPERLESS_SECRET_KEY
# Use this variable to set a timezone for the Paperless Docker containers. If not specified, defaults to UTC.
      PAPERLESS_TIME_ZONE: $TZ
# The default language to use for OCR. Set this to the language most of your
# documents are written in.
      PAPERLESS_OCR_LANGUAGE: fra
      PAPERLESS_TIKA_ENABLED: true
      PAPERLESS_TIKA_ENDPOINT: http://$COMPOSE_PROJECT_NAME-tika-1:9998
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://$COMPOSE_PROJECT_NAME-gotenberg-1:3000
      PAPERLESS_EMAIL_HOST: $PAPERLESS_EMAIL_HOST
      PAPERLESS_EMAIL_PORT: $PAPERLESS_EMAIL_PORT
      PAPERLESS_EMAIL_HOST_USER: $PAPERLESS_EMAIL_HOST_USER
      PAPERLESS_EMAIL_FROM: $PAPERLESS_EMAIL_FROM
      PAPERLESS_EMAIL_HOST_PASSWORD: $PAPERLESS_EMAIL_HOST_PASSWORD
      PAPERLESS_EMAIL_USE_TLS: $PAPERLESS_EMAIL_USE_TLS
      PAPERLESS_ADMIN_MAIL: $PAPERLESS_EMAIL_FROM
      PAPERLESS_ADMIN_USER: $PAPERLESS_ADMIN_USER
      PAPERLESS_ADMIN_PASSWORD: $PAPERLESS_ADMIN_PASSWORD
    volumes:
      - $JOHNCLOUD_ROOT/$COMPOSE_PROJECT_NAME/paperless/data:/usr/src/paperless/data
      - $JOHNCLOUD_ROOT/$COMPOSE_PROJECT_NAME/paperless/media:/usr/src/paperless/media
      - $JOHNCLOUD_ROOT/$COMPOSE_PROJECT_NAME/paperless/export:/usr/src/paperless/export
      - $JOHNCLOUD_ROOT/nextcloud/data/data/ydethe/files:/usr/src/paperless/consume
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.$COMPOSE_PROJECT_NAME.rule=Host(`$HOST`)"
      - "traefik.http.routers.$COMPOSE_PROJECT_NAME.entrypoints=websecure"
      - "traefik.http.routers.$COMPOSE_PROJECT_NAME.tls.certresolver=letsencrypt"
      - "homepage.group=Bureautique"
      - "homepage.name=Paperless-ngx"
      - "homepage.icon=paperless-ngx.svg"
      - "homepage.href=https://$HOST"
      - "homepage.description=Document management system"

networks:
  default:
    external: true
    name: $TRAEFIK_NETWORK
