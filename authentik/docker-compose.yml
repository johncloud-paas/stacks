version: "3.4"

# https://goauthentik.io/docs/providers/proxy/server_traefik

services:
  postgresql:
    image: docker.io/library/postgres:12-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - $JOHNCLOUD_ROOT/$COMPOSE_PROJECT_NAME/database:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${PG_PASS:?database password required}
      POSTGRES_USER: ${PG_USER:-authentik}
      POSTGRES_DB: ${PG_DB:-authentik}
    labels:
      - "traefik.enable=false"

  redis:
    image: docker.io/library/redis:alpine
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - $JOHNCLOUD_ROOT/$COMPOSE_PROJECT_NAME/redis:/data
    labels:
      - "traefik.enable=false"

  server:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2023.10.6}
    restart: unless-stopped
    command: server
    environment:
      AUTHENTIK_REDIS__HOST: $COMPOSE_PROJECT_NAME-redis-1
      AUTHENTIK_POSTGRESQL__HOST: $COMPOSE_PROJECT_NAME-postgresql-1
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
      AUTHENTIK_SECRET_KEY: $AUTHENTIK_SECRET_KEY
      AUTHENTIK_ERROR_REPORTING__ENABLED: $AUTHENTIK_ERROR_REPORTING__ENABLED
      AUTHENTIK_EMAIL__HOST: $AUTHENTIK_EMAIL__HOST
      AUTHENTIK_EMAIL__PORT: $AUTHENTIK_EMAIL__PORT
      AUTHENTIK_EMAIL__USERNAME: $AUTHENTIK_EMAIL__USERNAME
      AUTHENTIK_EMAIL__PASSWORD: $AUTHENTIK_EMAIL__PASSWORD
      AUTHENTIK_EMAIL__USE_TLS: $AUTHENTIK_EMAIL__USE_TLS
      AUTHENTIK_EMAIL__USE_SSL: $AUTHENTIK_EMAIL__USE_SSL
      AUTHENTIK_EMAIL__TIMEOUT: $AUTHENTIK_EMAIL__TIMEOUT
      AUTHENTIK_EMAIL__FROM: $AUTHENTIK_EMAIL__FROM
      AUTHENTIK_COOKIE_DOMAIN: $DOMAIN
    volumes:
      - $JOHNCLOUD_ROOT/$COMPOSE_PROJECT_NAME/media:/media
      - $JOHNCLOUD_ROOT/$COMPOSE_PROJECT_NAME/custom-templates:/templates
    depends_on:
      - postgresql
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.authentik.rule=Host(`$HOST`)"
      - "traefik.http.routers.authentik.entrypoints=websecure"
      - "traefik.http.routers.authentik.tls.certresolver=letsencrypt"
      - "traefik.http.services.authentik.loadbalancer.server.port=9000"
      - "homepage.group=Platform"
      - "homepage.name=Authentik"
      - "homepage.icon=authentik.png"
      - "homepage.href=https://$HOST"
      - "homepage.description=All of your identity needs into a single platform"

  worker:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2023.10.6}
    restart: unless-stopped
    command: worker
    environment:
      AUTHENTIK_REDIS__HOST: $COMPOSE_PROJECT_NAME-redis-1
      AUTHENTIK_POSTGRESQL__HOST: $COMPOSE_PROJECT_NAME-postgresql-1
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
      AUTHENTIK_SECRET_KEY: $AUTHENTIK_SECRET_KEY
      AUTHENTIK_ERROR_REPORTING__ENABLED: $AUTHENTIK_ERROR_REPORTING__ENABLED
      AUTHENTIK_EMAIL__HOST: $AUTHENTIK_EMAIL__HOST
      AUTHENTIK_EMAIL__PORT: $AUTHENTIK_EMAIL__PORT
      AUTHENTIK_EMAIL__USERNAME: $AUTHENTIK_EMAIL__USERNAME
      AUTHENTIK_EMAIL__PASSWORD: $AUTHENTIK_EMAIL__PASSWORD
      AUTHENTIK_EMAIL__USE_TLS: $AUTHENTIK_EMAIL__USE_TLS
      AUTHENTIK_EMAIL__USE_SSL: $AUTHENTIK_EMAIL__USE_SSL
      AUTHENTIK_EMAIL__TIMEOUT: $AUTHENTIK_EMAIL__TIMEOUT
      AUTHENTIK_EMAIL__FROM: $AUTHENTIK_EMAIL__FROM
      AUTHENTIK_COOKIE_DOMAIN: $DOMAIN
    # `user: root` and the docker socket volume are optional.
    # See more for the docker socket integration here:
    # https://goauthentik.io/docs/outposts/integrations/docker
    # Removing `user: root` also prevents the worker from fixing the permissions
    # on the mounted folders, so when removing this make sure the folders have the correct UID/GID
    # (1000:1000 by default)
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $JOHNCLOUD_ROOT/$COMPOSE_PROJECT_NAME/media:/media
      - $JOHNCLOUD_ROOT/traefik/certs:/certs
      - $JOHNCLOUD_ROOT/$COMPOSE_PROJECT_NAME/custom-templates:/templates
    depends_on:
      - postgresql
      - redis
    labels:
      - "traefik.enable=false"

networks:
  default:
    external: true
    name: $TRAEFIK_NETWORK
    